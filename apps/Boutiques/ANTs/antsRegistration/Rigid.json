{
	"tool-version": "1.0.0",
	"name": "Rigid",
	"author": "",
	"description": [
		"                                                                                                                                                                                                  ",
		"COMMAND:                                                                                                                                                                                          ",
		"     antsRegistration                                                                                                                                                                             ",
		"                                                                                                                                                                                                  ",
		"OPTIONS:                                                                                                                                                                                          ",
		"     --version                                                                                                                                                                                    ",
		"     -d, --dimensionality 2\/3                                                                                                                                                                     ",
		"     -o, --output outputTransformPrefix                                                                                                                                                           ",
		"                  [outputTransformPrefix,<outputWarpedImage>,<outputInverseWarpedImage>]                                                                                                          ",
		"     -j, --save-state saveSateAsTransform                                                                                                                                                         ",
		"     -k, --restore-state restoreStateAsATransform                                                                                                                                                 ",
		"     -a, --write-composite-transform 1\/(0)                                                                                                                                                        ",
		"     -p, --print-similarity-measure-interval <unsignedIntegerValue>                                                                                                                               ",
		"     --write-interval-volumes <unsignedIntegerValue>                                                                                                                                              ",
		"     -z, --collapse-output-transforms (1)\/0                                                                                                                                                       ",
		"     -i, --initialize-transforms-per-stage (1)\/0                                                                                                                                                  ",
		"     -n, --interpolation Linear                                                                                                                                                                   ",
		"                         NearestNeighbor                                                                                                                                                          ",
		"                         MultiLabel[<sigma=imageSpacing>,<alpha=4.0>]                                                                                                                             ",
		"                         Gaussian[<sigma=imageSpacing>,<alpha=1.0>]                                                                                                                               ",
		"                         BSpline[<order=3>]                                                                                                                                                       ",
		"                         CosineWindowedSinc                                                                                                                                                       ",
		"                         WelchWindowedSinc                                                                                                                                                        ",
		"                         HammingWindowedSinc                                                                                                                                                      ",
		"                         LanczosWindowedSinc                                                                                                                                                      ",
		"                         GenericLabel[<interpolator=Linear>]                                                                                                                                      ",
		"     -g, --restrict-deformation PxQxR                                                                                                                                                             ",
		"     -q, --initial-fixed-transform initialTransform                                                                                                                                               ",
		"                                   [initialTransform,<useInverse>]                                                                                                                                ",
		"                                   [fixedImage,movingImage,initializationFeature]                                                                                                                 ",
		"     -r, --initial-moving-transform initialTransform                                                                                                                                              ",
		"                                    [initialTransform,<useInverse>]                                                                                                                               ",
		"                                    [fixedImage,movingImage,initializationFeature]                                                                                                                ",
		"     -m, --metric CC[fixedImage,movingImage,metricWeight,radius,<samplingStrategy={None,Regular,Random}>,<samplingPercentage=[0,1]>]                                                              ",
		"                  MI[fixedImage,movingImage,metricWeight,numberOfBins,<samplingStrategy={None,Regular,Random}>,<samplingPercentage=[0,1]>]                                                        ",
		"                  Mattes[fixedImage,movingImage,metricWeight,numberOfBins,<samplingStrategy={None,Regular,Random}>,<samplingPercentage=[0,1]>]                                                    ",
		"                  MeanSquares[fixedImage,movingImage,metricWeight,radius=NA,<samplingStrategy={None,Regular,Random}>,<samplingPercentage=[0,1]>]                                                  ",
		"                  Demons[fixedImage,movingImage,metricWeight,radius=NA,<samplingStrategy={None,Regular,Random}>,<samplingPercentage=[0,1]>]                                                       ",
		"                  GC[fixedImage,movingImage,metricWeight,radius=NA,<samplingStrategy={None,Regular,Random}>,<samplingPercentage=[0,1]>]                                                           ",
		"                  ICP[fixedPointSet,movingPointSet,metricWeight,<samplingPercentage=[0,1]>,<boundaryPointsOnly=0>]                                                                                ",
		"                  PSE[fixedPointSet,movingPointSet,metricWeight,<samplingPercentage=[0,1]>,<boundaryPointsOnly=0>,<pointSetSigma=1>,<kNeighborhood=50>]                                           ",
		"                  JHCT[fixedPointSet,movingPointSet,metricWeight,<samplingPercentage=[0,1]>,<boundaryPointsOnly=0>,<pointSetSigma=1>,<kNeighborhood=50>,<alpha=1.1>,<useAnisotropicCovariances=1>]",
		"                  IGDM[fixedImage,movingImage,metricWeight,fixedMask,movingMask,<neighborhoodRadius=0x0>,<intensitySigma=0>,<distanceSigma=0>,<kNeighborhood=1>,<gradientSigma=1>]                ",
		"     -t, --transform Rigid[gradientStep]                                                                                                                                                          ",
		"                     Affine[gradientStep]                                                                                                                                                         ",
		"                     CompositeAffine[gradientStep]                                                                                                                                                ",
		"                     Similarity[gradientStep]                                                                                                                                                     ",
		"                     Translation[gradientStep]                                                                                                                                                    ",
		"                     BSpline[gradientStep,meshSizeAtBaseLevel]                                                                                                                                    ",
		"                     GaussianDisplacementField[gradientStep,updateFieldVarianceInVoxelSpace,totalFieldVarianceInVoxelSpace]                                                                       ",
		"                     BSplineDisplacementField[gradientStep,updateFieldMeshSizeAtBaseLevel,totalFieldMeshSizeAtBaseLevel,<splineOrder=3>]                                                          ",
		"                     TimeVaryingVelocityField[gradientStep,numberOfTimeIndices,updateFieldVarianceInVoxelSpace,updateFieldTimeVariance,totalFieldVarianceInVoxelSpace,totalFieldTimeVariance]     ",
		"                     TimeVaryingBSplineVelocityField[gradientStep,velocityFieldMeshSize,<numberOfTimePointSamples=4>,<splineOrder=3>]                                                             ",
		"                     SyN[gradientStep,updateFieldVarianceInVoxelSpace,totalFieldVarianceInVoxelSpace]                                                                                             ",
		"                     BSplineSyN[gradientStep,updateFieldMeshSizeAtBaseLevel,totalFieldMeshSizeAtBaseLevel,<splineOrder=3>]                                                                        ",
		"                     Exponential[gradientStep,updateFieldVarianceInVoxelSpace,velocityFieldVarianceInVoxelSpace,<numberOfIntegrationSteps>]                                                       ",
		"                     BSplineExponential[gradientStep,updateFieldMeshSizeAtBaseLevel,velocityFieldMeshSizeAtBaseLevel,<numberOfIntegrationSteps>,<splineOrder=3>]                                  ",
		"     -c, --convergence MxNxO                                                                                                                                                                      ",
		"                       [MxNxO,<convergenceThreshold=1e-6>,<convergenceWindowSize=10>]                                                                                                             ",
		"     -s, --smoothing-sigmas MxNxO...                                                                                                                                                              ",
		"     -f, --shrink-factors MxNxO...                                                                                                                                                                ",
		"     -u, --use-histogram-matching                                                                                                                                                                 ",
		"     -l, --use-estimate-learning-rate-once                                                                                                                                                        ",
		"     -w, --winsorize-image-intensities [lowerQuantile,upperQuantile]                                                                                                                              ",
		"     -x, --masks [fixedImageMask,movingImageMask]                                                                                                                                                 ",
		"     --float                                                                                                                                                                                      ",
		"     --minc                                                                                                                                                                                       ",
		"     -v, --verbose (0)\/1                                                                                                                                                                          ",
		"     -h                                                                                                                                                                                           ",
		"     --help                                                                                                                                                                                       ",
		"                                                                                                                                                                                                  "
	],
	"container-image": {
		"image": "bids\/mrtrix3_connectome",
		"type": "docker"
	},
	"inputs": [
		{
			"description": "Moving image",
			"value-key": "[MOVING_IMAGE]",
			"type": "File",
			"optional": 0,
			"id": "moving_image",
			"name": "Moving image"
		},
		{
			"description": "Reference image",
			"value-key": "[REFERENCE_IMAGE]",
			"type": "File",
			"optional": 0,
			"id": "reference_image",
			"name": "Reference image"
		},
		{
			"description": "Outputs prefix",
			"value-key": "[OUTPUTS_PREFIX]",
			"type": "String",
			"optional": 0,
			"id": "outputs_prefix",
			"name": "Outputs prefix"
		},
		{
			"description": "Outputs directory",
			"value-key": "[OUTPUTS_DIRECTORY]",
			"type": "String",
			"optional": 0,
			"id": "outputs_directory",
			"name": "Outputs directory"
		}
	],
	"output-files": [
		{
			"description": "tranform matrix",
			"value-key": "[TRANFORM_MATRIX]",
			"path-template": "[OUTPUTS_DIRECTORY]\\[OUTPUTS_PREFIX]0GenericAffine.mat",
			"optional": 0,
			"id": "tranform_matrix",
			"name": "tranform matrix"
		},
		{
			"description": "wrapped image",
			"value-key": "[WRAPPED_IMAGE]",
			"path-template": "[OUTPUTS_DIRECTORY]\\[OUTPUTS_PREFIX].nii.gz",
			"optional": 0,
			"id": "wrapped_image",
			"name": "wrapped image"
		}
	],
	"command-line": "antsRegistration   --dimensionality  3  --metric  Mattes[  [REFERENCE_IMAGE]  ,  [MOVING_IMAGE]  ,1,32]  --transform Rigid[0.5]  -c 10x10 -f 10x5 -s 1x1vox --output  [ [OUTPUTS_DIRECTORY]\/[OUTPUTS_PREFIX] , [WRAPPED_IMAGE] ]"
}
